package me.protocos.xteam.command.serveradmin;

import me.protocos.xteam.TeamPlugin;
import me.protocos.xteam.command.ServerAdminCommand;
import me.protocos.xteam.core.ITeamCoordinator;
import me.protocos.xteam.fakeobjects.FakePlayer;
import me.protocos.xteam.fakeobjects.FakeXTeam;
import me.protocos.xteam.util.CommandUtil;
import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

public class ServerAdminOpenTest
{
	private TeamPlugin teamPlugin;
	private ServerAdminCommand fakeCommand;
	private ITeamCoordinator teamCoordinator;

	@Before
	public void setup()
	{
		teamPlugin = FakeXTeam.asTeamPlugin();
		fakeCommand = new ServerAdminOpen(teamPlugin);
		teamCoordinator = teamPlugin.getTeamCoordinator();
	}

	@Test
	public void ShouldBeServerAdminOpen()
	{
		Assert.assertTrue("open TEAM".matches(fakeCommand.getPattern()));
		Assert.assertTrue("open TEAM ".matches(fakeCommand.getPattern()));
		Assert.assertTrue("open TEAM ".matches(fakeCommand.getPattern()));
		Assert.assertTrue("o TEAM ".matches(fakeCommand.getPattern()));
		Assert.assertTrue("op TEAM".matches(fakeCommand.getPattern()));
		Assert.assertFalse("open TEAM sdfhkabkl".matches(fakeCommand.getPattern()));
		Assert.assertTrue(fakeCommand.getUsage().replaceAll("[\\[\\]\\{\\}]", "").matches("/team " + fakeCommand.getPattern()));
	}

	@Test
	public void ShouldBeTeamAdminOpenExecute()
	{
		//ASSEMBLE
		FakePlayer fakePlayerSender = FakePlayer.get("protocos");
		//ACT
		boolean fakeExecuteResponse = CommandUtil.execute(fakePlayerSender, fakeCommand, "open one");
		//ASSERT
		Assert.assertEquals("Open joining is now enabled for ONE", fakePlayerSender.getLastMessages());
		Assert.assertTrue(teamCoordinator.getTeam("one").isOpenJoining());
		Assert.assertTrue(fakeExecuteResponse);
	}

	@After
	public void takedown()
	{
	}
}
